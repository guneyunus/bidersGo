@{
    ViewBag.Title = "Kullanıcı Listesi";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid">
    <!-- Page-Title -->
    <div class="row">
        <div class="col-sm-12">
            <div class="page-title-box">
                <div class="float-end">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a href="#">Metrica</a>
                        </li><!--end nav-item-->
                        <li class="breadcrumb-item">
                            <a href="#">CRM</a>
                        </li><!--end nav-item-->
                        <li class="breadcrumb-item active">Users</li>
                    </ol>
                </div>
                <h4 class="page-title">Contacts</h4>
            </div><!--end page-title-box-->
        </div><!--end col-->
    </div>
    <!-- end page title end breadcrumb -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="row align-items-center">
                        <div class="col">
                            <h4 class="card-title">Kullanıcı Detayları</h4>
                        </div><!--end col-->
                    </div>  <!--end row-->
                </div><!--end card-header-->
                <div class="card-body">
                    <div id="dxGrid"></div>
                </div><!--end card-body-->
            </div><!--end card-->
        </div> <!--end col-->
    </div><!--end row-->

</div>


@section Scripts
{
   @* <script src="~/vendor/devextreme-aspnet-data/js/dx.aspnet.data.js"></script>*@
   
    <script type="text/javascript" src="https://cdn3.devexpress.com/jslib/21.2.5/js/dx.all.js"></script>

    <script>
   // var dataGrid = null;
    $(() => {
        function loadGrid() {
            dataGrid = $('#dxGrid').dxDataGrid({
                remoteOperations: { paging: true, filtering: true, sorting: true, grouping: true, summary: true, groupPaging: true },
                dataSource: DevExpress.data.AspNet.createStore({
                    key: 'id',
                    loadUrl: "../../../admin/GetUser"
                    //updateUrl: `${url}/updateusers`,
                    //insertUrl: `${url}/InsertOrder`,
                    //deleteUrl: `${url}/DeleteOrder`,
                    //onBeforeSend(method, ajaxOptions) {
                    //    ajaxOptions.xhrFields = { withCredentials: true };
                    //    console.log(method);
                    //    console.log(ajaxOptions);
                    //}
                }),
                editing: {
                    mode: 'form',
                    allowUpdating: true
                },
                showColumnLines: true,
                allowColumnResizing: true,
                showRowLines: true,
                rowAlternationEnabled: true,
                showBorders: true,
                searchPanel: {
                    visible: true,
                    width: 240,
                    placeholder: "Ara..."
                },
                filterRow: {
                    visible: true,
                    applyFilter: "auto"
                },
                headerFilter: {
                    visible: true
                },
                export: {
                    enabled: true,
                    fileName: `Tüm Kullanıcılar_${parseInt(Math.random() * 1000000000)}`,
                    allowExportSelectedData: true
                },
                paging: {
                    pageSize: 20
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [5, 15, 30, 45],
                    showInfo: true
                },
                selection: {
                    mode: "multiple"
                },
                columns: [
                    {
                        caption: 'Id',
                        dataField: "id",
                        visible: false,
                        allowFiltering: false,
                        formItem: { visible: false }
                    },
                    {
                        caption: 'Ad',
                        dataField: "userName"
                    },
                    //{
                    //    caption: 'Soyad',
                    //    dataField: "surname"
                    //},
                    {
                        caption: 'E-Posta',
                        dataField: "email"
                    }
                    //{
                    //    caption: 'Email Onay',
                    //    dataField: 'emailConfirmed',
                    //    dataType: 'boolean'
                    //},
                    //{
                    //    caption: 'Kayıt Tarihi',
                    //    dataField: "createdDate",
                    //    dataType: "date",
                    //    format: 'dd/MM/yyyy',
                    //    sortOrder: "desc"
                    //},
                    //{
                    //    caption: 'Detay',
                    //    //cellTemplate: function(container, options) {
                    //    //    var current = options.data;
                    //    //    var url = '@Url.Action("UserDetail","Manage")' + '/' + current.id;
                    //    //    $("<a href=" + url + "/>")
                    //    //        .text("Detay")
                    //    //        .addClass('btn btn-block btn-info btn-sm')
                    //    //        .appendTo(container);
                    //    //},
                    //    formItem: { visible: false }
                    //}
                ],
                //masterDetail: {
                //    enabled: true,
                //    template(container, options) {
                //        var current = options.data;
                //        $('<div>')
                //            .dxDataGrid({
                //                columnAutoWidth: true,
                //                showBorders: true,
                //                columns: [
                //                    {
                //                        caption : "Adres",
                //                        dataField: "line"
                //                    },
                //                    {
                //                        caption : "Posta Kodu",
                //                        dataField: "postCode"
                //                    },
                //                    {
                //                        caption : "Adres Tipi",
                //                        dataField: "addressType"
                //                    },
                //                    {
                //                        caption : "İl",
                //                        dataField: "state.city.id",
                //                        lookup: {
                //                            dataSource: {
                //                                store: DevExpress.data.AspNet.createStore({
                //                                    key: "id",
                //                                    loadUrl: "../../../api/addressapi/citylookup"
                //                                }),
                //                                _fnFeatureHtmlPaginate: true,
                //                                pageSize: 10
                //                            },
                //                            displayExpr: "text",
                //                            valueExpr: "value"
                //                        }
                //                    },
                //                    {
                //                        caption : "İlçe",
                //                        dataField: "state.id",
                //                        lookup: {
                //                            dataSource(opt) {
                //                                console.log(opt);
                //                                return {
                //                                    store: DevExpress.data.AspNet.createStore({
                //                                        key: "id",
                //                                        loadUrl: "../../../api/addressapi/statelookup"
                //                                    }),
                //                                    filter: opt.data ? ['CityId', '=', opt.data.state.cityId] : null
                //                                };
                //                            },
                //                            _fnFeatureHtmlPaginate: true,
                //                            pageSize: 10,
                //                            displayExpr: "text",
                //                            valueExpr: "value"
                //                        }
                //                    }
                //                    ],
                //                editing: {
                //                    mode: 'form',
                //                    allowAdding: true,
                //                    allowUpdating: true,
                //                    allowDeleting: true
                //                },
                //                onEditorPrepared: function (opt) {
                //                    if (opt.parentType == 'dataRow' && opt.dataField == 'state.city.id') {
                //                        opt.editorElement.dxSelectBox('instance').option('onValueChanged', function (e) {
                //                            console.log(e);
                //                        });
                //                    }
                //                },
                //                remoteOperations: { paging: true, filtering: true, sorting: true, grouping: true, summary: true, groupPaging: true },
                //                dataSource: DevExpress.data.AspNet.createStore({
                //                    key: 'id',
                //                    loadUrl: "../../../api/addressapi/get",
                //                    loadParams: { userId: current.id },
                //                    insertUrl: "../../../api/addressapi/insert",
                //                    updateUrl: "../../../api/addressapi/update",
                //                    deleteUrl: "../../../api/addressapi/delete",
                //                    onBeforeSend(method, ajaxOptions) {
                //                        ajaxOptions.xhrFields = { withCredentials: true };
                //                        if (method === "update") {
                //                            var dataStr = ajaxOptions.data.values;
                //                            var data = JSON.parse(dataStr);
                //                            data.stateId = data.state.id;
                //                            delete data["state"];
                //                            dataStr = JSON.stringify(data);
                //                            ajaxOptions.data.values = dataStr;
                //                        }
                //                        console.log(ajaxOptions);
                //                    }
                //                })
                //            }).appendTo(container);
                //    },
                //},
            }).dxDataGrid("instance");
        }
        loadGrid();
    });
    </script>
}
